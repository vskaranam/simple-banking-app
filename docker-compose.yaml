version: '3.8'

services:
  mysql:
    image: mysql:latest
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: message_db
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql  # Mount a volume for MySQL data on the host

  account-app:
    image: saikaranam/account-app:latest # This is the image of spring-boot app pulling from docker-hub repo
    container_name: account-container
    depends_on:
      - mysql
    ports:
      - "9080:9080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/message_db
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: root
    volumes:
      - account_data:/app/data  # Mount a volume for application data

  customer-app:
    image: saikaranam/customer-app:latest # This is the image of spring-boot app pulling from docker-hub repo
    container_name: customer-container
    depends_on:
      - mysql
    ports:
      - "9090:9090"
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/message_db
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: root
    volumes:
      - customer_data:/app/data  # Mount a volume for application data

  operation-app:
    image: saikaranam/operation-app:latest # This is the image of spring-boot app pulling from docker-hub repo
    container_name: operation-container
    depends_on:
      - mysql
    ports:
      - "9070:9070"
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/message_db
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: root
    volumes:
      - operation_data:/app/data  # Mount a volume for application data

volumes:
  mysql_data:  # Define the volume for MySQL data
  account_data:  # Define the volume for application data
  customer_data:  # Define the volume for application data
  customer_data: